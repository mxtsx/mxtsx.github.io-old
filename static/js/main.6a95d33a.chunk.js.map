{"version":3,"sources":["components/Header/Header.module.css","components/Portfolio/Portfolio.module.css","components/Homepage/Homepage.module.css","components/Contact/Contact.module.css","components/About/About.module.css","components/Footer/Footer.module.css","App.module.css","hoc/withLoadingEffect/withLoadingEffect.module.css","components/Error 404/Error404.module.css","components/common/Preloader/Preloader.module.css","redux/languageSelectors.ts","redux/headerSelectors.ts","redux/languageReducer.ts","components/Header/LanguageSelectForm.tsx","collapse_minus.svg","collapse_plus.svg","components/Header/Header.tsx","redux/homepageSelectors.ts","hoc/withQueryString.tsx","hoc/withLoadingEffect/withLoadingEffect.tsx","redux/contactSelectors.ts","components/Homepage/Homepage.tsx","redux/portfolioSelectors.ts","components/Portfolio/ProjectInformation.tsx","components/Portfolio/Portfolio.tsx","components/Contact/Contacts.tsx","redux/aboutSelectors.ts","components/About/About.tsx","components/Footer/Footer.tsx","redux/errorSelectors.ts","components/Error 404/Error 404.tsx","components/common/Preloader/preloader.svg","components/common/Preloader/Preloader.tsx","App.tsx","reportWebVitals.ts","redux/aboutReducer.ts","redux/contactReducer.ts","github.svg","linkedin-round.svg","email-round.svg","redux/homepageReducer.ts","redux/portfolioReducer.ts","redux/headerReducer.ts","redux/errorReducer.ts","redux/reduxStore.ts","index.tsx"],"names":["module","exports","getLanguage","state","lang","language","getHeaderText","header","navbarText","getLabelText","selectLabel","CHANGE_LANGUAGE","initialState","actions","type","payload","languageReducer","action","useStyles","makeStyles","theme","createStyles","formControl","minWidth","left","backgroundColor","borderColor","borderWidth","color","transition","maxHeight","formControlPaddingUkrRus","paddingTop","paddingRight","paddingLeft","formControlPaddingEng","formControlPaddingCz","formControlPaddingHr","resize","fontFamily","fontSize","menuStyle","position","LanguageSelectForm","React","memo","useSelector","classes","dispatch","useDispatch","FormControl","variant","size","className","InputLabel","id","cn","Select","MenuProps","labelId","value","onChange","event","target","label","MenuItem","Header","isOpen","setIsOpen","useState","s","headerOpened","logo","name","level","collapseButton","onClick","src","collapseMinus","alt","collapsePlus","HeaderNavbar","currentLanguage","text","nav","navWidth360","navWidth370","navWidth400","navWidth460","map","m","exact","to","path","activeClassName","active","title","getHomePageText","home","withQueryStringComponent","Component","props","history","useHistory","useEffect","actualQueryString","location","search","split","query","pathname","queryString","stringify","push","actualLanguage","parse","substring","withLoadingEffect","isLoaded","setIsLoaded","useLayoutEffect","setTimeout","c","componentVisible","componentInvisible","getContactText","contact","Homepage","contacts","h","homepageContainer","contentWrapper","greeting","description","links","href","url","image","compose","getPortfolioText","portfolio","ProjectInformation","notes","p","portfolioProject","portfolioProjectItem","portfolioProjectName","portfolioProjectDescription","portfolioProjectUrl","index","portfolioProjectNote","Portfolio","portfolioContainer","Contacts","contactContainer","clickableImg","getAboutText","about","About","a","aboutContainer","Footer","f","footer","copyright","copyrightIcon","getError404","errorReducer","error404","Error404","e","errorContainer","Preloader","height","width","maxWidth","preloaderWrapper","style","preloaderIcon","App","isReady","setIsReady","main","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eng","ukr","rus","cz","hr","aboutReducer","contactReducer","homepageReducer","portfolioReducer","headerReducer","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6a95d33a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3AhW_\",\"logo\":\"Header_logo__2FffY\",\"name\":\"Header_name__37GoO\",\"level\":\"Header_level__3NuMy\",\"navWidth360\":\"Header_navWidth360__3m00t\",\"navWidth370\":\"Header_navWidth370__2Lqyr\",\"navWidth400\":\"Header_navWidth400__1tCXp\",\"navWidth460\":\"Header_navWidth460__1nkQF\",\"nav\":\"Header_nav__2f7Dn\",\"active\":\"Header_active__1VFq_\",\"collapseButton\":\"Header_collapseButton__1ubSG\",\"headerOpened\":\"Header_headerOpened__3sKKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolioContainer\":\"Portfolio_portfolioContainer__2xo0k\",\"contentWrapper\":\"Portfolio_contentWrapper__KEMP_\",\"portfolioProject\":\"Portfolio_portfolioProject__1433K\",\"portfolioProjectItem\":\"Portfolio_portfolioProjectItem__1svPi\",\"portfolioProjectName\":\"Portfolio_portfolioProjectName__2KV8L\",\"portfolioProjectDescription\":\"Portfolio_portfolioProjectDescription__2lwLK\",\"portfolioProjectNote\":\"Portfolio_portfolioProjectNote__22_1Z\",\"portfolioProjectUrl\":\"Portfolio_portfolioProjectUrl__3fzqU\",\"homeTransition-appear\":\"Portfolio_homeTransition-appear__2VJlf\",\"homeTransition-appear-active\":\"Portfolio_homeTransition-appear-active__18Mxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homepageContainer\":\"Homepage_homepageContainer__1H1Tb\",\"contentWrapper\":\"Homepage_contentWrapper__1Lfyh\",\"text\":\"Homepage_text__1kfoq\",\"links\":\"Homepage_links__2fw36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactContainer\":\"Contact_contactContainer__2FvEx\",\"contentWrapper\":\"Contact_contentWrapper__3CdKM\",\"contact\":\"Contact_contact__2d73W\",\"clickableImg\":\"Contact_clickableImg__3vemD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutContainer\":\"About_aboutContainer__1AL3_\",\"contentWrapper\":\"About_contentWrapper__3-maW\",\"title\":\"About_title__hy7f-\",\"text\":\"About_text__1Oenj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__10tfe\",\"copyright\":\"Footer_copyright__2uh4s\",\"copyrightIcon\":\"Footer_copyrightIcon__uzd6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"App_contentWrapper__1NUOt\",\"main\":\"App_main__1D2S9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"componentInvisible\":\"withLoadingEffect_componentInvisible__2l9Z5\",\"componentVisible\":\"withLoadingEffect_componentVisible__1YNX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"Error404_errorContainer__oxz2Y\",\"contentWrapper\":\"Error404_contentWrapper__XIpJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__JL7pa\"};","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getLanguage = (state: AppStateType) => {\r\n    return state.lang.language\r\n}","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getHeaderText = (state: AppStateType) => {\r\n    return state.header.navbarText\r\n}\r\n\r\nexport const getLabelText = (state: AppStateType) => {\r\n    return state.header.selectLabel\r\n}","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst CHANGE_LANGUAGE = \"lang/CHANGE_LANGUAGE\"\r\n\r\nconst initialState = {\r\n    language: \"eng\" as LanguageType\r\n}\r\n\r\nconst languageReducer = (state = initialState, action: ActionsType): LanguageReducerStateType => {\r\n    switch (action.type) {\r\n        case CHANGE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.payload.language\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    languageChanged: (language: LanguageType) => ({type: CHANGE_LANGUAGE, payload: {language}} as const)\r\n}\r\n\r\ntype LanguageReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\nexport type LanguageType = \"eng\" | \"ukr\" | \"rus\" | \"cz\" | \"hr\"\r\n\r\nexport default languageReducer","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {actions, LanguageType} from \"../../redux/languageReducer\";\r\nimport {createStyles, FormControl, InputLabel, makeStyles, Theme} from \"@material-ui/core\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport React from \"react\";\r\nimport cn from \"classnames\"\r\nimport {getLabelText} from \"../../redux/headerSelectors\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            minWidth: 25,\r\n            \"& .MuiSelect-icon\": {\r\n                left: 31\r\n            },\r\n            \"& .MuiSelect-select:focus\": {\r\n                backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"rgb(0, 0, 0)\",\r\n                borderWidth: 1\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-focused\": {\r\n                color: \"rgb(0, 0, 0)\",\r\n                transition: \"200ms color\"\r\n            },\r\n            \"& .MuiListItem-root.Mui-selected, .MuiListItem-root.Mui-selected:hover\": {\r\n                backgroundColor: \"rgba(255, 255, 255, 0.25)\",\r\n            },\r\n            \"& .MuiMenu-paper\": {\r\n                backgroundColor: \"lightgray\",\r\n                maxHeight: \"max-content\"\r\n            }\r\n        },\r\n        formControlPaddingUkrRus: {\r\n            \"& .MuiSelect-outlined.MuiSelect-outlined\": {\r\n                paddingTop: 10,\r\n                paddingRight: 25,\r\n                paddingLeft: 10\r\n            }\r\n        },\r\n        formControlPaddingEng: {\r\n            \"& .MuiSelect-outlined.MuiSelect-outlined\": {\r\n                paddingTop: 10,\r\n                paddingRight: 22,\r\n                paddingLeft: 8\r\n            }\r\n        },\r\n        formControlPaddingCz: {\r\n            \"& .MuiSelect-outlined.MuiSelect-outlined\": {\r\n                paddingTop: 10,\r\n                paddingRight: 32,\r\n                paddingLeft: 11\r\n            },\r\n            \"& .MuiSelect-icon\": {\r\n                left: 30\r\n            }\r\n        },\r\n        formControlPaddingHr: {\r\n            \"& .MuiSelect-outlined.MuiSelect-outlined\": {\r\n                paddingTop: 10,\r\n                paddingRight: 29,\r\n                paddingLeft: 12\r\n            },\r\n            \"& .MuiSelect-icon\": {\r\n                left: 29\r\n            }\r\n        },\r\n        resize:{\r\n            fontFamily: \"Source Sans Pro\",\r\n            fontSize: 16.5,\r\n        },\r\n        menuStyle: {\r\n            \"& .MuiPaper-root\": {\r\n                position: \"absolute\",\r\n                backgroundColor: \"lightgray\",\r\n                maxHeight: \"min-content\"\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nconst LanguageSelectForm: React.FC = React.memo(() => {\r\n    const selectLabel = useSelector(getLabelText)\r\n    const language = useSelector(getLanguage)\r\n    const classes = useStyles(language);\r\n    const dispatch = useDispatch()\r\n    const onChangeHandler = (event: React.ChangeEvent<{value: unknown}>) => {\r\n        dispatch(actions.languageChanged(event.target.value as LanguageType))\r\n    }\r\n    return (\r\n        <FormControl variant=\"outlined\" size={\"small\"} className={classes.formControl}>\r\n            <InputLabel id=\"select-outlined-label\" className={cn((classes.resize))}>{selectLabel[language]}</InputLabel>\r\n            <Select\r\n                MenuProps={{ className: classes.menuStyle }}\r\n                labelId=\"select-outlined-label\"\r\n                id=\"select-outlined\"\r\n                value={language}\r\n                onChange={onChangeHandler}\r\n                label={selectLabel[language]}\r\n                className={cn(classes.resize,\r\n                    {[classes.formControlPaddingEng]: language === \"eng\"},\r\n                    {[classes.formControlPaddingUkrRus]: language === \"ukr\" || \"rus\"},\r\n                    {[classes.formControlPaddingCz]: language === \"cz\"},\r\n                    {[classes.formControlPaddingHr]: language === \"hr\"})}\r\n            >\r\n                <MenuItem value={\"eng\"}>eng</MenuItem>\r\n                <MenuItem value={\"cz\"}>cz</MenuItem>\r\n                <MenuItem value={\"ukr\"}>ukr</MenuItem>\r\n                <MenuItem value={\"rus\"}>rus</MenuItem>\r\n                <MenuItem value={\"hr\"}>hr</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n})\r\n\r\nexport default LanguageSelectForm","export default __webpack_public_path__ + \"static/media/collapse_minus.0636bcd4.svg\";","export default __webpack_public_path__ + \"static/media/collapse_plus.3375a66e.svg\";","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\nimport React, {Dispatch, SetStateAction, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {getHeaderText} from \"../../redux/headerSelectors\";\r\nimport cn from \"classnames\"\r\nimport LanguageSelectForm from \"./LanguageSelectForm\";\r\nimport collapseMinus from \"../../collapse_minus.svg\"\r\nimport collapsePlus from \"../../collapse_plus.svg\"\r\n\r\nconst Header: React.FC = React.memo(() => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    return (\r\n        <header className={cn(s.header,\r\n            isOpen && s.headerOpened)}>\r\n            <div className={s.logo}>\r\n                <div className={s.name}>Maksym Stepanets</div>\r\n                <div className={s.level}>Junior React Developer</div>\r\n            </div>\r\n            <button className={s.collapseButton} onClick={() => setIsOpen(!isOpen)}>\r\n                {isOpen ?\r\n                    <img src={collapseMinus} alt=\"collapseMinus\"/> :\r\n                    <img src={collapsePlus} alt=\"collapsePlus\"/>}\r\n            </button>\r\n            <HeaderNavbar setIsOpen={setIsOpen} />\r\n        </header>\r\n    )\r\n})\r\n\r\nconst HeaderNavbar: React.FC<{setIsOpen: Dispatch<SetStateAction<boolean>>}> = React.memo(({setIsOpen}) => {\r\n    const currentLanguage = useSelector(getLanguage)\r\n    const text = useSelector(getHeaderText)\r\n    return(\r\n        <nav className={cn(s.nav,\r\n            {[s.navWidth360]: currentLanguage === \"eng\"},\r\n            {[s.navWidth370]: currentLanguage === \"cz\"},\r\n            {[s.navWidth400]: currentLanguage === \"hr\"},\r\n            {[s.navWidth460]: currentLanguage === \"rus\"},\r\n            {[s.navWidth460]: currentLanguage === \"ukr\"})}\r\n        >\r\n            <LanguageSelectForm />\r\n            {text.map((m) => {\r\n                return(\r\n                    <NavLink onClick={() => setIsOpen(false)} key={m.id} exact to={m.path} activeClassName={s.active}>\r\n                        {m.title[currentLanguage]}\r\n                    </NavLink>\r\n                )\r\n            })}\r\n        </nav>\r\n    )\r\n})\r\n\r\n\r\nexport default Header","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getHomePageText = (state: AppStateType) => {\r\n    return state.home.text\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../redux/languageSelectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport queryString from \"querystring\";\r\nimport {actions, LanguageType} from \"../redux/languageReducer\";\r\n\r\ntype QueryStringType = {lang?: LanguageType}\r\n\r\nfunction withQueryStringComponent<WCP> (Component: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        const currentLanguage = useSelector(getLanguage)\r\n        const history = useHistory()\r\n        const dispatch = useDispatch()\r\n        useEffect(() => {\r\n            const actualQueryString = history.location.search.split('?')[0];\r\n            const query: QueryStringType = {}\r\n            query.lang = currentLanguage\r\n            if(history.location.pathname + history.location.search === `${history.location.pathname}?${queryString.stringify(query)}`){\r\n                return\r\n            }\r\n            history.push({\r\n                pathname: actualQueryString,\r\n                search: queryString.stringify(query)\r\n            })\r\n            // eslint-disable-next-line\r\n        }, [currentLanguage, history.location.search])\r\n        useEffect(() => {\r\n            const parsed = queryString.parse(history.location.search.substring(1)) as QueryStringType\r\n            let actualLanguage = parsed.lang as LanguageType\r\n            dispatch(actions.languageChanged(actualLanguage))\r\n            // eslint-disable-next-line\r\n        }, [])\r\n        return <Component {...props} />\r\n    }\r\n}\r\n\r\nexport default withQueryStringComponent","import React, {useLayoutEffect, useState} from \"react\";\r\nimport c from \"./withLoadingEffect.module.css\"\r\n\r\nfunction withLoadingEffect<WCP> (Component: React.ComponentType<WCP>) {\r\n    return React.memo((props: WCP) => {\r\n        const [isLoaded, setIsLoaded] = useState(false)\r\n        useLayoutEffect(() => {\r\n            setTimeout(() => {\r\n                setIsLoaded(true)\r\n            })\r\n        }, [])\r\n        return (\r\n            <div className={isLoaded ? c.componentVisible : c.componentInvisible}>\r\n                <Component {...props} />\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default withLoadingEffect","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getContactText = (state: AppStateType) => {\r\n    return state.contact.text\r\n}","import {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {getHomePageText} from \"../../redux/homepageSelectors\";\r\nimport h from \"./Homepage.module.css\"\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\nimport {getContactText} from \"../../redux/contactSelectors\";\r\n\r\nconst Homepage: React.FC = React.memo(() => {\r\n    const currentLanguage = useSelector(getLanguage)\r\n    const contacts = useSelector(getContactText)\r\n    const text = useSelector(getHomePageText)\r\n    return(\r\n        <div className={h.homepageContainer}>\r\n            <div className={h.contentWrapper}>\r\n            <div className={h.text}>\r\n                <div>\r\n                    {text[currentLanguage].greeting}\r\n                </div>\r\n                <div>\r\n                    {text[currentLanguage].description}\r\n                </div>\r\n            </div>\r\n                <div className={h.links}>\r\n                    {contacts.map(m => {\r\n                        return (\r\n                            <a key={m.id} href={m.url}>\r\n                                <img src={m.image} alt={m.name}/>\r\n                            </a>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(Homepage)","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getPortfolioText = (state: AppStateType) => {\r\n    return state.portfolio.text\r\n}","import React from \"react\";\r\nimport p from \"./Portfolio.module.css\"\r\nimport cn from \"classnames\"\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    description: string,\r\n    url: string,\r\n    id: number,\r\n    notes: string[] | undefined\r\n}\r\n\r\nconst ProjectInformation: React.FC<PropsType> = React.memo(({name, description, url, id, notes}) => {\r\n    return(\r\n        <div className={p.portfolioProject}>\r\n            <h1 className={cn(p.portfolioProjectItem, p.portfolioProjectName)}>{id}. {name}</h1>\r\n            <span className={cn(p.portfolioProjectItem, p.portfolioProjectDescription)}>{description}</span>\r\n            <a href={url} className={cn(p.portfolioProjectItem, p.portfolioProjectUrl)}>{url.substring(8)}</a>\r\n            {notes && notes.map((m, index) => <span key={index} className={p.portfolioProjectNote}>{m}</span>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ProjectInformation","import {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {getPortfolioText} from \"../../redux/portfolioSelectors\";\r\nimport p from \"./Portfolio.module.css\"\r\nimport ProjectInformation from \"./ProjectInformation\";\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport React from \"react\";\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\n\r\nconst Portfolio: React.FC = React.memo(() => {\r\n    const currentLanguage = useSelector(getLanguage)\r\n    const text = useSelector(getPortfolioText)\r\n    return (\r\n        <div className={p.portfolioContainer}>\r\n            <div className={p.contentWrapper}>\r\n                {text[currentLanguage].map((m, index) =>\r\n                    <ProjectInformation key={index} name={m.name} description={m.description} url={m.url} id={m.id} notes={m.notes}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(Portfolio)","import React from \"react\";\r\nimport c from \"./Contact.module.css\"\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getContactText} from \"../../redux/contactSelectors\";\r\n\r\nconst Contacts: React.FC = React.memo( () => {\r\n    const contacts = useSelector(getContactText)\r\n    return (\r\n        <div className={c.contactContainer}>\r\n            <div className={c.contentWrapper}>\r\n                {contacts.map((m) => {\r\n                    return(\r\n                        <div key={m.id} className={c.contact}>\r\n                            <a href={m.url}>\r\n                                <img src={m.image} alt={m.name} className={c.clickableImg}/>\r\n                            </a>\r\n                            <a href={m.url}>{m.name}</a>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(Contacts)","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getAboutText = (state: AppStateType) => {\r\n    return state.about.text\r\n}","import {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {getAboutText} from \"../../redux/aboutSelectors\";\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport React from \"react\";\r\nimport a from \"./About.module.css\"\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\n\r\nconst About: React.FC = React.memo(() => {\r\n    const currentLanguage = useSelector(getLanguage)\r\n    const text = useSelector(getAboutText)\r\n    return(\r\n        <div className={a.aboutContainer}>\r\n            <div className={a.contentWrapper}>\r\n                <h1 className={a.title}>{text[currentLanguage].title}</h1>\r\n                {text[currentLanguage].description.map((m, index) => {\r\n                    return(\r\n                        <span key={index} className={a.text}>{m}</span>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(About)","import React from \"react\";\r\nimport f from \"./Footer.module.css\"\r\n\r\nconst Footer: React.FC = React.memo(() => {\r\n    return(\r\n        <div className={f.footer}>\r\n                <span className={f.copyright}>\r\n                    <span className={f.copyrightIcon}>&copy;</span> 2021\r\n                </span>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Footer","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getError404 = (state: AppStateType) => {\r\n    return state.errorReducer.error404\r\n}","import {getError404} from \"../../redux/errorSelectors\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport e from \"./Error404.module.css\"\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\nimport React from \"react\";\r\n\r\nconst Error404: React.FC = React.memo(() => {\r\n    const error404 = useSelector(getError404)\r\n    const currentLanguage = useSelector(getLanguage)\r\n    return (\r\n        <div className={e.errorContainer}>\r\n            <div className={e.contentWrapper}>\r\n                <h1>{error404[currentLanguage]}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(Error404)","export default __webpack_public_path__ + \"static/media/preloader.6d2c9aba.svg\";","import preloaderIcon from \"./preloader.svg\"\r\nimport React from \"react\";\r\nimport p from \"./Preloader.module.css\"\r\n\r\ntype PropsType = {\r\n    height?: string,\r\n    width?: string,\r\n    maxHeight?: string,\r\n    maxWidth?: string\r\n}\r\n\r\nconst Preloader: React.FC<PropsType> = React.memo(({height = \"100%\", width = \"100%\", maxWidth = \"100%\", maxHeight = \"100%\"}) => {\r\n    return(\r\n        <div className={p.preloaderWrapper} style={{ height: height, width: width, backgroundColor: '#F8F8F8' }}>\r\n            <img src={preloaderIcon} alt=\"Preloader\" style={{maxWidth: maxWidth, maxHeight: maxHeight}}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Preloader","import React, {useLayoutEffect, useState} from 'react';\nimport s from './App.module.css';\nimport Header from \"./components/Header/Header\";\nimport Homepage from \"./components/Homepage/Homepage\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Portfolio from \"./components/Portfolio/Portfolio\";\nimport Contacts from \"./components/Contact/Contacts\";\nimport About from \"./components/About/About\";\nimport Footer from \"./components/Footer/Footer\";\nimport Error404 from \"./components/Error 404/Error 404\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nconst App: React.FC = React.memo(() => {\n    const [isReady, setIsReady] = useState(false)\n\n    useLayoutEffect(() => {\n        setTimeout(() => {\n            setIsReady(true)\n        }, 1500)\n    }, [])\n\n    if (!isReady) {\n        return <Preloader />\n    }\n    return (\n        <div className={s.contentWrapper}>\n            <Header/>\n            <main className={s.main}>\n                <Switch>\n                    <Route path={'/about'} render={() => <About/>}/>\n                    <Route path={'/portfolio'} render={() => <Portfolio/>}/>\n                    <Route path={'/contacts'} render={() => <Contacts/>}/>\n                    <Route exact path={'/'} render={() => <Homepage/>}/>\n                    <Route path={\"*\"} render={() => <Error404/>}/>\n                </Switch>\n            </main>\n            <Footer/>\n        </div>\n    );\n})\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst initialState = {\r\n    text: {\r\n        eng: {\r\n            title: \"About Me\",\r\n            description: [\r\n                \"My name is Max. I live in Prague. For the last few years of my life, I have been actively interested in learning languages, and in 2019 I first got acquainted with a programming language. Because of the need to automate routine tasks at work, I learned Python a little. I liked the result so much that I delved deeper into the field of programming. This was the beginning of a new stage in my life.\",\r\n                \"Today I am studying React Native and enhancement my knowledge in native JS, React, and Typescript. Although I have experience with the backend and databases, my heart belongs only to the frontend.\",\r\n                \"Unfortunately, I have spent most of my time studying the theoretical part, so up to now, my portfolio is empty. Of course, I did practical assignments in various courses, but I don't see the point in including them. What is the point in presenting to the employer what he has already seen in other people's portfolios? Anyway, I promise to fill in the existing gaps in the portfolio soon! I am already working on this so hard.\"\r\n            ]\r\n        },\r\n        ukr: {\r\n            title: \"Про мене\",\r\n            description: [\r\n                \"Мене звати Макс. Я живу у Празі. Декілька останніх років я активно захоплююся вивченням різних мов, а у 2019 році я вперше познайомився з мовою програмування. У зв'язку з необхідністю автоматизувати буденні завдання на роботі я почав вивчати Python. Результат мене вразив настільки, що я вирішив зануритися у програмування ще більше. З цього моменту почався новий етап мого життя.\",\r\n                \"Станом на сьогодні я займаюся вивченням React Native та поглиблюю свої знання нативного JS, React і Typescript. Хоч я й маю досвід роботи з бекендом та базами даних, але моє серце належить лише фронтенду.\",\r\n                \"На жаль, впродовж того часу, коли я вивчав програмування, більшу його частину я витратив на закріплення саме теоретичних знань, тому моє портфоліо поки що порожнє. Звичайно, я виконував практичні завдання під час проходження різноманітних курсів, але додавати їх до свого портфоліо я не бачу сенсу. Навіщо показувати роботодавцю те, що він вже бачив десятки разів раніше в інших людей? У будь-якому разі, наявні пробіли у портфоліо я обіцяю щонайшвидше заповнити! Вже зараз я активно над цим працюю.\"\r\n            ]\r\n        },\r\n        rus: {\r\n            title: \"Обо мне\",\r\n            description: [\r\n                \"Меня зовут Макс. Я живу в Праге. Последние несколько лет своей жизни я активно увлекаюсь изучением языков, а в 2019 году я впервые познакомился с языком программирования. В связи с необходимостью автоматизировать рутинные задачи на работе я немного подучил Python. Результат мне настолько понравился, что я решил углубиться в сферу программирования. С этого начался новый этап моей жизни.\",\r\n                \"На сегодняшний день я занимаюсь изучением React Native и углублением знаний в сфере нативного JS, React и Typescript. Хоть я и имею опыт работы с бэкендом и базами данных, но моё сердце пренадлежит лишь фронтенду.\",\r\n                \"К сожалению, большую часть времени я потратил на изучение теоретических вопросов, так что пока что моё портфолио пустует. Разумеется, я выполнял практические задания на различных курсах, но вставлять их в своё портфолио я не вижу смысла. Зачем показывать работодателю то, что он видел уже десятки раз у других людей? В любом случае, существующие пробелы в портфолио я обещаю скоро заполнить! Уже сейчас я активно над этим работаю.\"\r\n            ]\r\n        },\r\n        cz: {\r\n            title: \"O mně\",\r\n            description: [\r\n                \"Jmenuji se Max. Bydlím v Praze. Posledních několik let svého života se aktivně zajímám o studium jazyků a v roce 2019 jsem se poprvé seznámil s programovacím jazykem. Potřeboval jsem v práci automatizovat rutinní úkoly a proto jsem se trochu naučil Python. Byl jsem z výsledků nadšený, takže jsem se rozhodl prohloubit znalosti Pythonu a studovat programování dál. A tak začala nová etapa mého života.\",\r\n                \"Dnes se zabývám studiem React Native a prohloubením znalostí v oblasti nativního JSu, Reactu a Typescriptu. I když mám zkušenosti s backendem a databázemi, mé srdce patří pouze frontendu.\",\r\n                \"Bohužel, většinu času jsem strávil studiem teorie, takže zatím je mé portfolio prázdné. Samozřejmě jsem vykonával úkoly během různých kurzů, ale dávat je do portfolia nevidím smysl. Aby se zaměstnavatel díval na to, co už viděl mnohokrát u jiných lidí? Ale ne. Každopádně slibuji, že brzy své portfolio doplním! Už teď na tom aktivně pracuji.\"\r\n            ]\r\n        },\r\n        hr: {\r\n            title: \"O meni\",\r\n            description: [\r\n                \"Zovem se Max. Živim u Pragu. Tijekom posljednjih nekoliko godina svoga života sam se aktivno bavio učenjem jezika, a 2019. godine se prvi put upoznao sa programskim jezikom. Trebao sam automatizirati na poslu rutinske zadatke, tako da malo naučio Python. Bio sam tako oduševljen rezultatom da odlućio produbiti znanje Pythona i učiti programiranje dalje. Tako je počelo novo poglavlje u mom životu.\",\r\n                \"Danas učim React Native i produbljujem znanja u oblastima JSa, Reacta i Typescripta. Iako imam iskustva u backendu i bazama podataka, moje srce pripada samo frontendu.\",\r\n                \"Nažalost, većinu vremena sam proveo proučavajući teoriju, tako da je za danas moj portfolio prazan. Premda da sam radio zadatke na različitim tečajevima, imati ih u portofoliju ne vidim smisao. Zašto? Da bi poslodavac gledao na ono što je već mnogo puta vidio u portfolijima drugih ljudi? U svakom slučaju, obećavam da ću uskoro nešto u portfolio dodavati! Već sada aktivno radim na tome.\"\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nconst aboutReducer = (state = initialState, action: ActionsType): AboutReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype AboutReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default aboutReducer","import {InferActionTypes} from \"./reduxStore\";\r\nimport github from \"../github.svg\"\r\nimport linkedin from \"../linkedin-round.svg\"\r\nimport email from \"../email-round.svg\"\r\n\r\nconst initialState = {\r\n    text: [\r\n        {\r\n            image: github,\r\n            url: \"https://github.com/mxtsx\",\r\n            name: \"Github\",\r\n            id: 1\r\n        },\r\n        {\r\n            image: linkedin,\r\n            url: \"https://www.linkedin.com/in/mxtsx/\",\r\n            name: \"LinkedIn\",\r\n            id: 2\r\n        },\r\n        {\r\n            image: email,\r\n            url: \"mailto: mxdottsx@gmail.com\",\r\n            name: \"mxdottsx@gmail.com\",\r\n            id: 3\r\n        }\r\n    ]\r\n}\r\n\r\nconst contactReducer = (state = initialState, action: ActionsType): ContactReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype ContactReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default contactReducer","export default __webpack_public_path__ + \"static/media/github.e6d6bee7.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-round.b14bfe3d.svg\";","export default __webpack_public_path__ + \"static/media/email-round.0ea35c92.svg\";","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst initialState = {\r\n    text: {\r\n        eng: {\r\n            greeting: \"Hi, my name is Max.\",\r\n            description: \"I am a Junior React Developer. Welcome to my page.\"\r\n        },\r\n        ukr: {\r\n            greeting: \"Привіт, я Макс.\",\r\n            description: \"Я починаючий React Developer. Вітаю на моїй сторінці.\"\r\n        },\r\n        rus: {\r\n            greeting: \"Привет, меня зовут Макс.\",\r\n            description: \"Я начинающий React Developer. Добро пожаловать на мою страницу.\"\r\n        },\r\n        cz: {\r\n            greeting: \"Ahoj, jsem Max.\",\r\n            description: \"Jsem Junior React Developer. Vítejte na mojí stránce.\"\r\n        },\r\n        hr: {\r\n            greeting: \"Bok, ja sam Max.\",\r\n            description: \"Sam Junior React Developer. Dobro došli na moju stranicu.\"\r\n        }\r\n    }\r\n}\r\n\r\nconst homepageReducer = (state = initialState, action: ActionsType): HomePageReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype HomePageReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default homepageReducer","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst initialState = {\r\n    text: {\r\n        eng: [\r\n            {\r\n                id: 1,\r\n                name: \"Business card website\",\r\n                description: \"This page was made using React, Redux, Typescript and Material UI elements.\",\r\n                url: \"https://mxtsx.github.io\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Social Network\",\r\n                description: \"Page was made using React, Redux, Typescript, Formik, Axios, WebSocket and Ant Design elements.\",\r\n                url: \"https://mxtsx.github.io/sample-social-network\",\r\n                notes: [\"Login: free@samuraijs.com\",\r\n                    \"Password: free\",\r\n                    \"In the Safari browser: cookies - enabled; prevent cross-site tracking - disabled.\"]\r\n            }\r\n        ],\r\n        ukr: [\r\n            {\r\n                id: 1,\r\n                name: \"Сайт-візитка\",\r\n                description: \"Ця сторінка була зроблена з використанням React, Redux, Typescript та елементів Material UI.\",\r\n                url: \"https://mxtsx.github.io\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Соціальна мережа\",\r\n                description: \"Сторінка була створена з використанням React, Redux, Typescript, Formik, Axios, WebSocket та елементів Ant Design.\",\r\n                url: \"https://mxtsx.github.io/sample-social-network\",\r\n                notes: [\"Логін: free@samuraijs.com\",\r\n                    \"Пароль: free\",\r\n                    \"У браузері Safari: кукіс - дозволені; не стежити між сайтами - вимкнено.\"]\r\n            }\r\n        ],\r\n        rus: [\r\n            {\r\n                id: 1,\r\n                name: \"Сайт-визитка\",\r\n                description: \"Этот сайт был сделан с использованием React, Redux, Typescript и элементов Material UI.\",\r\n                url: \"https://mxtsx.github.io\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Социальная сеть\",\r\n                description: \"Сайт был создан с использованием React, Redux, Typescript, Formik, Axios, WebSocket и элементов Ant Design.\",\r\n                url: \"https://mxtsx.github.io/sample-social-network\",\r\n                notes: [\"Логин: free@samuraijs.com\",\r\n                    \"Пароль: free\",\r\n                    \"В браузере Safari: кукис - включены; без перекрестного отслеживания - выключено.\"]\r\n            }\r\n        ],\r\n        cz: [\r\n            {\r\n                id: 1,\r\n                name: \"Webová vizitka\",\r\n                description: \"Tato stránka byla vytvořena s použitím React, Redux, Typescript a elementů Material UI.\",\r\n                url: \"https://mxtsx.github.io\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Sociální síť\",\r\n                description: \"Stránka byla vytvořena s použitím React, Redux, Typescript, Formik, Axios, WebSocket a elementů Ant Design.\",\r\n                url: \"https://mxtsx.github.io/sample-social-network\",\r\n                notes: [\"Přihlašovací jméno: free@samuraijs.com\",\r\n                    \"Heslo: free\",\r\n                    \"V prohlížeči Safari: cookies - zapnuto; nasledovat napříč stránkami - vypnuto.\"]\r\n            }\r\n        ],\r\n        hr: [\r\n            {\r\n                id: 1,\r\n                name: \"Poslovna web stranica\",\r\n                description: \"Ova stranica je stvorena pomoću React, Redux, Typescript i elementa Material UI.\",\r\n                url: \"https://mxtsx.github.io\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Društvena mreža\",\r\n                description: \"Stranica je stvorena pomoću React, Redux, Typescript, Formik, Axios, WebSocket i elemenata Ant Design.\",\r\n                url: \"https://mxtsx.github.io/sample-social-network\",\r\n                notes: [\"Korisničko ime: free@samuraijs.com\",\r\n                    \"Lozinka: free\",\r\n                    \"U pregledniku Safari: cookies - uključeno; spriječi praćenje na više mj. - isključeno.\"]\r\n            }\r\n        ],\r\n    }\r\n}\r\n\r\nconst portfolioReducer = (state = initialState, action: ActionsType): PortfolioReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype PortfolioReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default portfolioReducer","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst initialState = {\r\n    navbarText: [\r\n        {\r\n            title: {\r\n                eng: \"Home\",\r\n                ukr: \"Головна сторінка\",\r\n                rus: \"Главная страница\",\r\n                cz: \"Domů\",\r\n                hr: \"Početna stranica\"\r\n            },\r\n            path: \"/\",\r\n            id: 1\r\n        },\r\n        {\r\n            title: {\r\n                eng: \"About\",\r\n                ukr: \"Про мене\",\r\n                rus: \"Обо мне\",\r\n                cz: \"O mně\",\r\n                hr: \"O meni\"\r\n            },\r\n            path: \"/about\",\r\n            id: 2\r\n        },\r\n        {\r\n            title: {\r\n                eng: \"Portfolio\",\r\n                ukr: \"Портфоліо\",\r\n                rus: \"Портфолио\",\r\n                cz: \"Portfolio\",\r\n                hr: \"Portfolio\"\r\n            },\r\n            path: \"/portfolio\",\r\n            id: 3\r\n        },\r\n        {\r\n            title: {\r\n                eng: \"Contact\",\r\n                ukr: \"Контакти\",\r\n                rus: \"Контакты\",\r\n                cz: \"Kontakty\",\r\n                hr: \"Kontakt\"\r\n            },\r\n            path: \"/contacts\",\r\n            id: 4\r\n        }\r\n    ],\r\n    selectLabel: {\r\n        eng: \"Lang\",\r\n        ukr: \"Мова\",\r\n        rus: \"Язык\",\r\n        cz: \"Jazyk\",\r\n        hr: \"Jezik\"\r\n    }\r\n}\r\n\r\nconst headerReducer = (state = initialState, action: ActionsType): HeaderReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype HeaderReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default headerReducer","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nconst initialState = {\r\n    error404: {\r\n        eng: \"Page doesn't exist\",\r\n        ukr: \"Сторінки не існує\",\r\n        rus: \"Страница не существует\",\r\n        cz: \"Stránka neexistuje\",\r\n        hr: \"Stranica ne postoji\"\r\n    }\r\n}\r\n\r\nconst errorReducer = (state = initialState, action: ActionsType): ErrorReducerStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    sample: () => ({type: ''} as const)\r\n}\r\n\r\ntype ErrorReducerStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\nexport default errorReducer","import {combineReducers, createStore} from \"redux\";\r\nimport aboutReducer from \"./aboutReducer\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport homepageReducer from \"./homepageReducer\";\r\nimport portfolioReducer from \"./portfolioReducer\";\r\nimport headerReducer from \"./headerReducer\";\r\nimport languageReducer from \"./languageReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    about: aboutReducer,\r\n    contact: contactReducer,\r\n    home: homepageReducer,\r\n    portfolio: portfolioReducer,\r\n    header: headerReducer,\r\n    lang: languageReducer,\r\n    errorReducer: errorReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\ntype RootReducer = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducer>\r\nexport type InferActionTypes<T> = T extends {[key: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}