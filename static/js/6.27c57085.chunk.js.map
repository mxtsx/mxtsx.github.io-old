{"version":3,"sources":["components/Portfolio/Portfolio.module.css","redux/portfolioSelectors.ts","components/Portfolio/ProjectInformation.tsx","components/Portfolio/Portfolio.tsx"],"names":["module","exports","getPortfolioText","state","portfolio","text","ProjectInformation","React","memo","name","description","url","id","notes","className","p","portfolioProject","cn","portfolioProjectItem","portfolioProjectName","portfolioProjectDescription","href","portfolioProjectUrl","substring","map","m","index","portfolioProjectNote","Portfolio","currentLanguage","useSelector","getLanguage","portfolioContainer","contentWrapper","compose","withQueryStringComponent","withLoadingEffect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,eAAiB,kCAAkC,iBAAmB,oCAAoC,qBAAuB,wCAAwC,qBAAuB,wCAAwC,4BAA8B,+CAA+C,qBAAuB,wCAAwC,oBAAsB,uCAAuC,wBAAwB,yCAAyC,+BAA+B,kD,4DCCvlB,MAAMC,EAAoBC,GACtBA,EAAMC,UAAUC,K,8DCoBZC,MAXiCC,IAAMC,MAAK,EAAEC,OAAMC,cAAaC,MAAKC,KAAIC,WAEjF,sBAAKC,UAAWC,IAAEC,iBAAlB,UACI,qBAAIF,UAAWG,IAAGF,IAAEG,qBAAsBH,IAAEI,sBAA5C,UAAoEP,EAApE,KAA0EH,KAC1E,sBAAMK,UAAWG,IAAGF,IAAEG,qBAAsBH,IAAEK,6BAA9C,SAA6EV,IAC7E,mBAAGW,KAAMV,EAAKG,UAAWG,IAAGF,IAAEG,qBAAsBH,IAAEO,qBAAtD,SAA6EX,EAAIY,UAAU,KAC1FV,GAASA,EAAMW,KAAI,CAACC,EAAGC,IAAU,sBAAkBZ,UAAWC,IAAEY,qBAA/B,SAAsDF,GAA3CC,U,wBCRzD,MAAME,EAAsBrB,IAAMC,MAAK,KACnC,MAAMqB,EAAkBC,YAAYC,KAC9B1B,EAAOyB,YAAY5B,GACzB,OACI,qBAAKY,UAAWC,IAAEiB,mBAAlB,SACI,qBAAKlB,UAAWC,IAAEkB,eAAlB,SACK5B,EAAKwB,GAAiBL,KAAI,CAACC,EAAGC,IAC3B,cAAC,EAAD,CAAgCjB,KAAMgB,EAAEhB,KAAMC,YAAae,EAAEf,YAAaC,IAAKc,EAAEd,IAAKC,GAAIa,EAAEb,GAAIC,MAAOY,EAAEZ,OAAhFa,YAM9BQ,sBAA6BC,IAA0BC,IAAvDF,CAA0EN","file":"static/js/6.27c57085.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolioContainer\":\"Portfolio_portfolioContainer__2xo0k\",\"contentWrapper\":\"Portfolio_contentWrapper__KEMP_\",\"portfolioProject\":\"Portfolio_portfolioProject__1433K\",\"portfolioProjectItem\":\"Portfolio_portfolioProjectItem__1svPi\",\"portfolioProjectName\":\"Portfolio_portfolioProjectName__2KV8L\",\"portfolioProjectDescription\":\"Portfolio_portfolioProjectDescription__2lwLK\",\"portfolioProjectNote\":\"Portfolio_portfolioProjectNote__22_1Z\",\"portfolioProjectUrl\":\"Portfolio_portfolioProjectUrl__3fzqU\",\"homeTransition-appear\":\"Portfolio_homeTransition-appear__2VJlf\",\"homeTransition-appear-active\":\"Portfolio_homeTransition-appear-active__18Mxh\"};","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getPortfolioText = (state: AppStateType) => {\r\n    return state.portfolio.text\r\n}","import React from \"react\";\r\nimport p from \"./Portfolio.module.css\"\r\nimport cn from \"classnames\"\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    description: string,\r\n    url: string,\r\n    id: number,\r\n    notes: string[] | undefined\r\n}\r\n\r\nconst ProjectInformation: React.FC<PropsType> = React.memo(({name, description, url, id, notes}) => {\r\n    return(\r\n        <div className={p.portfolioProject}>\r\n            <h1 className={cn(p.portfolioProjectItem, p.portfolioProjectName)}>{id}. {name}</h1>\r\n            <span className={cn(p.portfolioProjectItem, p.portfolioProjectDescription)}>{description}</span>\r\n            <a href={url} className={cn(p.portfolioProjectItem, p.portfolioProjectUrl)}>{url.substring(8)}</a>\r\n            {notes && notes.map((m, index) => <span key={index} className={p.portfolioProjectNote}>{m}</span>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ProjectInformation","import {useSelector} from \"react-redux\";\r\nimport {getLanguage} from \"../../redux/languageSelectors\";\r\nimport {getPortfolioText} from \"../../redux/portfolioSelectors\";\r\nimport p from \"./Portfolio.module.css\"\r\nimport ProjectInformation from \"./ProjectInformation\";\r\nimport {compose} from \"redux\";\r\nimport withQueryStringComponent from \"../../hoc/withQueryString\";\r\nimport React from \"react\";\r\nimport withLoadingEffect from \"../../hoc/withLoadingEffect/withLoadingEffect\";\r\n\r\nconst Portfolio: React.FC = React.memo(() => {\r\n    const currentLanguage = useSelector(getLanguage)\r\n    const text = useSelector(getPortfolioText)\r\n    return (\r\n        <div className={p.portfolioContainer}>\r\n            <div className={p.contentWrapper}>\r\n                {text[currentLanguage].map((m, index) =>\r\n                    <ProjectInformation key={index} name={m.name} description={m.description} url={m.url} id={m.id} notes={m.notes}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default compose<React.ComponentType>(withQueryStringComponent, withLoadingEffect)(Portfolio)"],"sourceRoot":""}